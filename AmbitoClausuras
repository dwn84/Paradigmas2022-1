//Los objetos son ciudadanos de primera clase
//Ejemplo en JavaScript

const objetoX = function(parametroN){
	return "Hello " +parametroN	
}

//Es diferente invocar la definición de la expresión

objetoX
objetoX()

//Manejo de ámbitos - local - global

const a = "alpha"
function global(){
	const b = "eof"
	function local(){
		const c = "wtf"
		console.log(a+b+c)
	}
	console.log(a+b+c)	
	return local()
}

//Tenemos un error al tratar de llamar la constante c, esta fuera de ámbito


//La clausura envuelve una función y retorna la definición de la función:

const a = "alpha"
function global(){
	const b = "eof"
	function local(){
		const c = "wtf"
		console.log(a+b+c)
	}
		
	return local // return local()
}

global
global()
global()()
//equivalente a llamadas en racket tales como:
/*
global
(global)
((global))
*/

//const miContadorX = function(){
const miContadorX = (function(){

	let _contador = 0

	function incrementar(){
		return _contador++
	}
	function decrementar(){
		return _contador--
	}
	function mostrarContador(){
		return _contador
	}
	return {
		incrementar,
		decrementar,
		mostrarContador

	}
//}
})() //define la clausura - envolvente


miContadorX
miContadorX.decrementar
miContadorX.decrementar()

function etiqueta_html(tag){
  function contenido_html(msg){
    console.log('<' + tag +'>' + msg + '</' + tag + '>')
  }
  return contenido_html
}

etiqueta_html
etiqueta_html()
etiqueta_html()()
etiqueta_html("h1")("hello")
